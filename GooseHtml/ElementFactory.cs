namespace GooseHtml;

public static class ElementFactory
{

	public static  Element Create(string tagName)
	{
		return tagName switch
		{
				ElementNames.A => new A(),
				"abbr" => new Abbr(),
				"address" => new Address(),
				"animate" => new Animate(),
				"animatemotion" => new AnimateMotion(),
				"animatetransform" => new AnimateTransform(),
				"area" => new Area(),
				"article" => new Article(),
				"aside" => new Aside(),
				"audio" => new Audio(),
				"b" => new B(),
				"base" => new Base(),
				"bdi" => new Bdi(),
				"bdo" => new Bdo(),
				"blockquote" => new Blockquote(),
				"body" => new Body(),
				ElementNames.Br => new Br(),
				ElementNames.Button => new Button(),
				"canvas" => new Canvas(),
				"caption" => new Caption(),
				"circle" => new Circle(),
				"cite" => new Cite(),
				"c-wiz" => new Element(name: "c-wiz"), //custom google element
				"c-data" => new Element(name: "c-data"), //custom google element
				"clippath" => new ClipPath(),
				"code" => new Code(),
				"col" => new Col(),
				"colgroup" => new Colgroup(),
				"data" => new Data(),
				"datalist" => new Datalist(),
				"dd" => new Dd(),
				"del" => new Del(),
				"defs" => new Defs(),
				"details" => new Details(),
				"desc" => new Desc(),
				"dfn" => new Dfn(),
				"dialog" => new Dialog(),
				ElementNames.Div => new Div(),
				"dl" => new Dl(),
				"dt" => new Dt(),
				"em" => new Em(),
				"embed" => new Embed(),
				"feblend" => new FeBlend(),
				"fecolormatrix" => new FeColorMatrix(),
				"fecomponenttransfer" => new FeComponentTransfer(),
				"fecomposite" => new FeComposite(),
				"feconvolvematrix" => new FeConvolveMatrix(),
				"fediffuselighting" => new FeDiffuseLighting(),
				"fedisplacementmap" => new FeDisplacementMap(),
				"fedistantlight" => new FeDistantLight(),
				"fedropshadow" => new FeDropShadow(),
				"feflood" => new FeFlood(),
				"fefunca" => new FeFuncA(),
				"fefuncb" => new FeFuncB(),
				"fefuncg" => new FeFuncG(),
				"fefuncr" => new FeFuncR(),
				"fegaussianblur" => new FeGaussianBlur(),
				"feimage" => new FeImage(),
				"femerge" => new FeMerge(),
				"femergenode" => new FeMergeNode(),
				"femorphology" => new FeMorphology(),
				"feoffset" => new FeOffset(),
				"fepointlight" => new FePointLight(),
				"fespecularlighting" => new FeSpecularLighting(),
				"fespotlight" => new FeSpotLight(),
				"fetile" => new FeTile(),
				"feturbulence" => new FeTurbulence(),
				"fieldset" => new Fieldset(),
				"figcaption" => new Figcaption(),
				"figure" => new Figure(),
				"filter" => new Filter(),
				"footer" => new Footer(),
				"form" => new Form(),
				"g" => new G(),
				"gu-island" => new Element("gu-island"), //custom element
				ElementNames.H1 => new H1(),
				ElementNames.H2 => new H2(),
				ElementNames.H3 => new H3(),
				ElementNames.H4 => new H4(),
				ElementNames.H5=> new H5(),
				ElementNames.H6 => new H6(),
				"head" => new Head(),
				"header" => new Header(),
				ElementNames.Hr => new Hr(),
				"html" => new Html(),
				ElementNames.I => new I(),
				"iframe" => new Iframe(),
				ElementNames.Img => new Img(),
				ElementNames.Image => new Image(),
				ElementNames.Input => new Input(),
				"ins" => new Ins(),
				"kbd" => new Kbd(),
				ElementNames.Label => new Label(),
				"legend" => new Legend(),
				ElementNames.Li => new Li(),
				"line" => new Line(),
				"lineargradient" => new LinearGradient(),
				ElementNames.Link  => new Link(),
				"main" => new Main(),
				"mask" => new Mask(),
				"map" => new Map(),
				"mark" => new Mark(),
				"math" => new Math(),
				"meta" => new Meta(),
				"meter" => new Meter(),
				"nav" => new Nav(),
				"noscript" => new Noscript(),
				"object" => new Object(),
				ElementNames.Ol => new Ol(),
				"optgroup" => new Optgroup(),
				"option" => new Option(),
				"output" => new Output(),
				ElementNames.P => new P(),
				"param" => new Param(),
				"path" => new Path(),
				"picture" => new Picture(),
				"polygon" => new Polygon(),
				"pre" => new Pre(),
				"progress" => new Progress(),
				"q" => new Q(),
				"rp" => new Rp(),
				"rect" => new Rect(),
				"rt" => new Rt(),
				"ruby" => new Ruby(),
				"s" => new S(),
				"samp" => new Samp(),
				"script" => new Script(),
				"section" => new Section(),
				"select" => new Select(),
				"small" => new Small(),
				"source" => new Source(),
				ElementNames.Span => new Span(),
				"stop" => new Stop(),
				"strong" => new Strong(),
				ElementNames.Style=> new Style(),
				"sub" => new Sub(),
				"summary" => new Summary(),
				"sup" => new Sup(),
				ElementNames.Svg => new Svg(),
				ElementNames.Table => new Table(),
				ElementNames.Tbody => new Tbody(),
				ElementNames.Td => new Td(),
				"template" => new Template(),
				"textElement" => new TextElement(),
				"textarea" => new Textarea(),
				"tfoot" => new Tfoot(),
				ElementNames.Th => new Th(),
				ElementNames.Thead => new Thead(),
				"time" => new Time(),
				ElementNames.Title => new Title(),
				ElementNames.Tr => new Tr(),
				"track" => new Track(),
				"u" => new U(),
				"use" => new Use(),
				ElementNames.Ul => new Ul(),
				"var" => new Var(),
				"video" => new Video(),
				"wbr" => new Wbr(),
				_ => new Element(name: tagName)
		};
	}
}
