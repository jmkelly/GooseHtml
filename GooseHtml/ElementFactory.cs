namespace GooseHtml;

public static class ElementFactory
{

	public static  Either<Element, VoidElement> Create(ReadOnlySpan<char> tagName)
	{
		return tagName switch
		{
				"a" => new Either<Element, VoidElement>(new A()),
				"abbr" => new Either<Element, VoidElement>(new Abbr()),
				"address" => new Either<Element, VoidElement>(new Address()),
				"animate" => new Either<Element, VoidElement>(new Animate()),
				"animatemotion" => new Either<Element, VoidElement>(new AnimateMotion()),
				"animatetransform" => new Either<Element, VoidElement>(new AnimateTransform()),
				"area" => new Either<Element, VoidElement>(new Area()),
				"article" => new Either<Element, VoidElement>(new Article()),
				"aside" => new Either<Element, VoidElement>(new Aside()),
				"audio" => new Either<Element, VoidElement>(new Audio()),
				"b" => new Either<Element, VoidElement>(new B()),
				"base" => new Either<Element, VoidElement>(new Base()),
				"bdi" => new Either<Element, VoidElement>(new Bdi()),
				"bdo" => new Either<Element, VoidElement>(new Bdo()),
				"blockquote" => new Either<Element, VoidElement>(new Blockquote()),
				"body" => new Either<Element, VoidElement>(new Body()),
				"br" => new Either<Element, VoidElement>(new Br()),
				"button" => new Either<Element, VoidElement>(new Button()),
				"canvas" => new Either<Element, VoidElement>(new Canvas()),
				"caption" => new Either<Element, VoidElement>(new Caption()),
				"circle" => new Either<Element, VoidElement>(new Circle()),
				"cite" => new Either<Element, VoidElement>(new Cite()),
				"c-wiz" => new Either<Element, VoidElement>(new Element(name: "c-wiz")), //custom google element
				"c-data" => new Either<Element, VoidElement>(new Element(name: "c-data")), //custom google element
				"class" => new Either<Element, VoidElement>(new Class()),
				"clippath" => new Either<Element, VoidElement>(new ClipPath()),
				"code" => new Either<Element, VoidElement>(new Code()),
				"col" => new Either<Element, VoidElement>(new Col()),
				"colgroup" => new Either<Element, VoidElement>(new Colgroup()),
				"data" => new Either<Element, VoidElement>(new Data()),
				"datalist" => new Either<Element, VoidElement>(new Datalist()),
				"dd" => new Either<Element, VoidElement>(new Dd()),
				"del" => new Either<Element, VoidElement>(new Del()),
				"defs" => new Either<Element, VoidElement>(new Defs()),
				"details" => new Either<Element, VoidElement>(new Details()),
				"desc" => new Either<Element, VoidElement>(new Desc()),
				"dfn" => new Either<Element, VoidElement>(new Dfn()),
				"dialog" => new Either<Element, VoidElement>(new Dialog()),
				"div" => new Either<Element, VoidElement>(new Div()),
				"dl" => new Either<Element, VoidElement>(new Dl()),
				"dt" => new Either<Element, VoidElement>(new Dt()),
				"em" => new Either<Element, VoidElement>(new Em()),
				"embed" => new Either<Element, VoidElement>(new Embed()),
				"feblend" => new Either<Element, VoidElement>(new FeBlend()),
				"fecolormatrix" => new Either<Element, VoidElement>(new FeColorMatrix()),
				"fecomponenttransfer" => new Either<Element, VoidElement>(new FeComponentTransfer()),
				"fecomposite" => new Either<Element, VoidElement>(new FeComposite()),
				"feconvolvematrix" => new Either<Element, VoidElement>(new FeConvolveMatrix()),
				"fediffuselighting" => new Either<Element, VoidElement>(new FeDiffuseLighting()),
				"fedisplacementmap" => new Either<Element, VoidElement>(new FeDisplacementMap()),
				"fedistantlight" => new Either<Element, VoidElement>(new FeDistantLight()),
				"fedropshadow" => new Either<Element, VoidElement>(new FeDropShadow()),
				"feflood" => new Either<Element, VoidElement>(new FeFlood()),
				"fefunca" => new Either<Element, VoidElement>(new FeFuncA()),
				"fefuncb" => new Either<Element, VoidElement>(new FeFuncB()),
				"fefuncg" => new Either<Element, VoidElement>(new FeFuncG()),
				"fefuncr" => new Either<Element, VoidElement>(new FeFuncR()),
				"fegaussianblur" => new Either<Element, VoidElement>(new FeGaussianBlur()),
				"feimage" => new Either<Element, VoidElement>(new FeImage()),
				"femerge" => new Either<Element, VoidElement>(new FeMerge()),
				"femergenode" => new Either<Element, VoidElement>(new FeMergeNode()),
				"femorphology" => new Either<Element, VoidElement>(new FeMorphology()),
				"feoffset" => new Either<Element, VoidElement>(new FeOffset()),
				"fepointlight" => new Either<Element, VoidElement>(new FePointLight()),
				"fespecularlighting" => new Either<Element, VoidElement>(new FeSpecularLighting()),
				"fespotlight" => new Either<Element, VoidElement>(new FeSpotLight()),
				"fetile" => new Either<Element, VoidElement>(new FeTile()),
				"feturbulence" => new Either<Element, VoidElement>(new FeTurbulence()),
				"fieldset" => new Either<Element, VoidElement>(new Fieldset()),
				"figcaption" => new Either<Element, VoidElement>(new Figcaption()),
				"figure" => new Either<Element, VoidElement>(new Figure()),
				"filter" => new Either<Element, VoidElement>(new Filter()),
				"footer" => new Either<Element, VoidElement>(new Footer()),
				"form" => new Either<Element, VoidElement>(new Form()),
				"g" => new Either<Element, VoidElement>(new G()),
				"gu-island" => new Either<Element, VoidElement>(new Element("gu-island")), //custom element
				"h" => new Either<Element, VoidElement>(new H()),
				"h1" => new Either<Element, VoidElement>(new H1()),
				"h2" => new Either<Element, VoidElement>(new H2()),
				"h3" => new Either<Element, VoidElement>(new H3()),
				"h4" => new Either<Element, VoidElement>(new H4()),
				"h5" => new Either<Element, VoidElement>(new H5()),
				"h6" => new Either<Element, VoidElement>(new H6()),
				"head" => new Either<Element, VoidElement>(new Head()),
				"header" => new Either<Element, VoidElement>(new Header()),
				"hr" => new Either<Element, VoidElement>(new Hr()),
				"html" => new Either<Element, VoidElement>(new Html()),
				"i" => new Either<Element, VoidElement>(new I()),
				"iframe" => new Either<Element, VoidElement>(new Iframe()),
				"img" => new Either<Element, VoidElement>(new Img()),
				"image" => new Either<Element, VoidElement>(new Image()),
				"input" => new Either<Element, VoidElement>(new Input()),
				"ins" => new Either<Element, VoidElement>(new Ins()),
				"kbd" => new Either<Element, VoidElement>(new Kbd()),
				"label" => new Either<Element, VoidElement>(new Label()),
				"legend" => new Either<Element, VoidElement>(new Legend()),
				"li" => new Either<Element, VoidElement>(new Li()),
				"line" => new Either<Element, VoidElement>(new Line()),
				"lineargradient" => new Either<Element, VoidElement>(new LinearGradient()),
				"link" => new Either<Element, VoidElement>(new Link()),
				"main" => new Either<Element, VoidElement>(new Main()),
				"mask" => new Either<Element, VoidElement>(new Mask()),
				"map" => new Either<Element, VoidElement>(new Map()),
				"mark" => new Either<Element, VoidElement>(new Mark()),
				"math" => new Either<Element, VoidElement>(new Math()),
				"meta" => new Either<Element, VoidElement>(new Meta()),
				"meter" => new Either<Element, VoidElement>(new Meter()),
				"nav" => new Either<Element, VoidElement>(new Nav()),
				"noscript" => new Either<Element, VoidElement>(new Noscript()),
				"object" => new Either<Element, VoidElement>(new Object()),
				"ol" => new Either<Element, VoidElement>(new Ol()),
				"optgroup" => new Either<Element, VoidElement>(new Optgroup()),
				"option" => new Either<Element, VoidElement>(new Option()),
				"output" => new Either<Element, VoidElement>(new Output()),
				"p" => new Either<Element, VoidElement>(new P()),
				"param" => new Either<Element, VoidElement>(new Param()),
				"path" => new Either<Element, VoidElement>(new Path()),
				"picture" => new Either<Element, VoidElement>(new Picture()),
				"polygon" => new Either<Element, VoidElement>(new Polygon()),
				"pre" => new Either<Element, VoidElement>(new Pre()),
				"progress" => new Either<Element, VoidElement>(new Progress()),
				"q" => new Either<Element, VoidElement>(new Q()),
				"rp" => new Either<Element, VoidElement>(new Rp()),
				"rect" => new Either<Element, VoidElement>(new Rect()),
				"rt" => new Either<Element, VoidElement>(new Rt()),
				"ruby" => new Either<Element, VoidElement>(new Ruby()),
				"s" => new Either<Element, VoidElement>(new S()),
				"samp" => new Either<Element, VoidElement>(new Samp()),
				"script" => new Either<Element, VoidElement>(new Script()),
				"section" => new Either<Element, VoidElement>(new Section()),
				"select" => new Either<Element, VoidElement>(new Select()),
				"small" => new Either<Element, VoidElement>(new Small()),
				"source" => new Either<Element, VoidElement>(new Source()),
				"span" => new Either<Element, VoidElement>(new Span()),
				"stop" => new Either<Element, VoidElement>(new Stop()),
				"strong" => new Either<Element, VoidElement>(new Strong()),
				"style" => new Either<Element, VoidElement>(new Style()),
				"sub" => new Either<Element, VoidElement>(new Sub()),
				"summary" => new Either<Element, VoidElement>(new Summary()),
				"sup" => new Either<Element, VoidElement>(new Sup()),
				"svg" => new Either<Element, VoidElement>(new Svg()),
				"table" => new Either<Element, VoidElement>(new Table()),
				"tbody" => new Either<Element, VoidElement>(new Tbody()),
				"td" => new Either<Element, VoidElement>(new Td()),
				"template" => new Either<Element, VoidElement>(new Template()),
				"textElement" => new Either<Element, VoidElement>(new TextElement()),
				"textarea" => new Either<Element, VoidElement>(new Textarea()),
				"tfoot" => new Either<Element, VoidElement>(new Tfoot()),
				"th" => new Either<Element, VoidElement>(new Th()),
				"thead" => new Either<Element, VoidElement>(new Thead()),
				"time" => new Either<Element, VoidElement>(new Time()),
				"title" => new Either<Element, VoidElement>(new Title()),
				"tr" => new Either<Element, VoidElement>(new Tr()),
				"track" => new Either<Element, VoidElement>(new Track()),
				"u" => new Either<Element, VoidElement>(new U()),
				"use" => new Either<Element, VoidElement>(new Use()),
				"ul" => new Either<Element, VoidElement>(new Ul()),
				"var" => new Either<Element, VoidElement>(new Var()),
				"video" => new Either<Element, VoidElement>(new Video()),
				"wbr" => new Either<Element, VoidElement>(new Wbr()),
				_ => new Either<Element, VoidElement>(new Element(name: tagName.ToString()))
		};
	}
}
