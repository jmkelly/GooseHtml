namespace GooseHtml;

internal static class ElementFactory
{

	internal static  Element Create(string tagName)
	{
		return tagName.ToLower() switch
		{
			"b" => new B(),
				"body" => new Body(),
				"div" => new Div(),
				"footer" => new Footer(),
				"head" => new Head(),
				"html" => new Html(),
				"img" => new Img(),
				"p" => new P(),
				"A" => new A(),
				"Abbr" => new Abbr(),
				"Address" => new Address(),
				"Area" => new Area(),
				"Article" => new Article(),
				"Aside" => new Aside(),
				"Audio" => new Audio(),
				"B" => new B(),
				"Base" => new Base(),
				"Bdi" => new Bdi(),
				"Bdo" => new Bdo(),
				"Blockquote" => new Blockquote(),
				"Body" => new Body(),
				"Br" => new Br(),
				"Button" => new Button(),
				"Canvas" => new Canvas(),
				"Caption" => new Caption(),
				"Cite" => new Cite(),
				"Class" => new Class(),
				"Code" => new Code(),
				"Col" => new Col(),
				"Colgroup" => new Colgroup(),
				"Data" => new Data(),
				"Datalist" => new Datalist(),
				"Dd" => new Dd(),
				"Del" => new Del(),
				"Details" => new Details(),
				"Dfn" => new Dfn(),
				"Dialog" => new Dialog(),
				"Div" => new Div(),
				"Dl" => new Dl(),
				"Dt" => new Dt(),
				"Em" => new Em(),
				"Embed" => new Embed(),
				"Fieldset" => new Fieldset(),
				"Figcaption" => new Figcaption(),
				"Figure" => new Figure(),
				"Footer" => new Footer(),
				"Form" => new Form(),
				"H" => new H(),
				"H1" => new H1(),
				"H2" => new H2(),
				"H3" => new H3(),
				"H4" => new H4(),
				"H5" => new H5(),
				"H6" => new H6(),
				"Head" => new Head(),
				"Header" => new Header(),
				"Hr" => new Hr(),
				"Html" => new Html(),
				"I" => new I(),
				"Iframe" => new Iframe(),
				"Img" => new Img(),
				"Input" => new Input(),
				"Ins" => new Ins(),
				"Kbd" => new Kbd(),
				"Label" => new Label(),
				"Legend" => new Legend(),
				"Li" => new Li(),
				"Link" => new Link(),
				"Main" => new Main(),
				"Map" => new Map(),
				"Mark" => new Mark(),
				"Math" => new Math(),
				"Meta" => new Meta(),
				"Meter" => new Meter(),
				"Nav" => new Nav(),
				"Noscript" => new Noscript(),
				"Object" => new Object(),
				"Ol" => new Ol(),
				"Optgroup" => new Optgroup(),
				"Option" => new Option(),
				"Output" => new Output(),
				"P" => new P(),
				"Param" => new Param(),
				"Path" => new Path(),
				"Pre" => new Pre(),
				"Progress" => new Progress(),
				"Q" => new Q(),
				"Rp" => new Rp(),
				"Rt" => new Rt(),
				"Ruby" => new Ruby(),
				"S" => new S(),
				"Samp" => new Samp(),
				"Script" => new Script(),
				"Section" => new Section(),
				"Select" => new Select(),
				"Small" => new Small(),
				"Source" => new Source(),
				"Span" => new Span(),
				"Strong" => new Strong(),
				"Style" => new Style(),
				"Sub" => new Sub(),
				"Summary" => new Summary(),
				"Sup" => new Sup(),
				"Svg" => new Svg(),
				"Table" => new Table(),
				"Tbody" => new Tbody(),
				"Td" => new Td(),
				"Template" => new Template(),
				"TextElement" => new TextElement(),
				"Textarea" => new Textarea(),
				"Tfoot" => new Tfoot(),
				"Th" => new Th(),
				"Thead" => new Thead(),
				"Time" => new Time(),
				"Title" => new Title(),
				"Tr" => new Tr(),
				"Track" => new Track(),
				"U" => new U(),
				"Ul" => new Ul(),
				"Var" => new Var(),
				"Video" => new Video(),
				"Wbr" => new Wbr(),
				_ => throw new ArgumentException($"element type: {tagName} unknown")
		};
	}
}


