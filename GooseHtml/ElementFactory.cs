namespace GooseHtml;

internal static class ElementFactory
{

	internal static  Element Create(string tagName)
	{
		return tagName.ToLower() switch
		{
				"abbr" => new Abbr(),
				"address" => new Address(),
				"area" => new Area(),
				"article" => new Article(),
				"aside" => new Aside(),
				"audio" => new Audio(),
				"b" => new B(),
				"base" => new Base(),
				"bdi" => new Bdi(),
				"bdo" => new Bdo(),
				"blockquote" => new Blockquote(),
				"body" => new Body(),
				"br" => new Br(),
				"button" => new Button(),
				"canvas" => new Canvas(),
				"caption" => new Caption(),
				"cite" => new Cite(),
				"class" => new Class(),
				"code" => new Code(),
				"col" => new Col(),
				"colgroup" => new Colgroup(),
				"data" => new Data(),
				"datalist" => new Datalist(),
				"dd" => new Dd(),
				"del" => new Del(),
				"details" => new Details(),
				"dfn" => new Dfn(),
				"dialog" => new Dialog(),
				"div" => new Div(),
				"dl" => new Dl(),
				"dt" => new Dt(),
				"em" => new Em(),
				"embed" => new Embed(),
				"feblend" => new FeBlend(),
				"fecolormatrix" => new FeColorMatrix(),
				"fecomponenttransfer" => new FeComponentTransfer(),
				"fecomposite" => new FeComposite(),
				"feconvolvematrix" => new FeConvolveMatrix(),
				"fediffuselighting" => new FeDiffuseLighting(),
				"fedisplacementmap" => new FeDisplacementMap(),
				"fedistantlight" => new FeDistantLight(),
				"fedropshadow" => new FeDropShadow(),
				"feflood" => new FeFlood(),
				"fefunca" => new FeFuncA(),
				"fefuncb" => new FeFuncB(),
				"fefuncg" => new FeFuncG(),
				"fefuncr" => new FeFuncR(),
				"fegaussianblur" => new FeGaussianBlur(),
				"feimage" => new FeImage(),
				"femerge" => new FeMerge(),
				"femergenode" => new FeMergeNode(),
				"femorphology" => new FeMorphology(),
				"feoffset" => new FeOffset(),
				"fepointlight" => new FePointLight(),
				"fespecularlighting" => new FeSpecularLighting(),
				"fespotlight" => new FeSpotLight(),
				"fetile" => new FeTile(),
				"feturbulence" => new FeTurbulence(),
				"fieldset" => new Fieldset(),
				"figcaption" => new Figcaption(),
				"figure" => new Figure(),
				"filter" => new Filter(),
				"footer" => new Footer(),
				"form" => new Form(),
				"h" => new H(),
				"h1" => new H1(),
				"h2" => new H2(),
				"h3" => new H3(),
				"h4" => new H4(),
				"h5" => new H5(),
				"h6" => new H6(),
				"head" => new Head(),
				"header" => new Header(),
				"hr" => new Hr(),
				"html" => new Html(),
				"i" => new I(),
				"iframe" => new Iframe(),
				"img" => new Img(),
				"input" => new Input(),
				"ins" => new Ins(),
				"kbd" => new Kbd(),
				"label" => new Label(),
				"legend" => new Legend(),
				"li" => new Li(),
				"link" => new Link(),
				"main" => new Main(),
				"map" => new Map(),
				"mark" => new Mark(),
				"math" => new Math(),
				"meta" => new Meta(),
				"meter" => new Meter(),
				"nav" => new Nav(),
				"noscript" => new Noscript(),
				"object" => new Object(),
				"ol" => new Ol(),
				"optgroup" => new Optgroup(),
				"option" => new Option(),
				"output" => new Output(),
				"p" => new P(),
				"param" => new Param(),
				"path" => new Path(),
				"pre" => new Pre(),
				"progress" => new Progress(),
				"q" => new Q(),
				"rp" => new Rp(),
				"rt" => new Rt(),
				"ruby" => new Ruby(),
				"s" => new S(),
				"samp" => new Samp(),
				"script" => new Script(),
				"section" => new Section(),
				"select" => new Select(),
				"small" => new Small(),
				"source" => new Source(),
				"span" => new Span(),
				"strong" => new Strong(),
				"style" => new Style(),
				"sub" => new Sub(),
				"summary" => new Summary(),
				"sup" => new Sup(),
				"svg" => new Svg(),
				"table" => new Table(),
				"tbody" => new Tbody(),
				"td" => new Td(),
				"template" => new Template(),
				"textElement" => new TextElement(),
				"textarea" => new Textarea(),
				"tfoot" => new Tfoot(),
				"th" => new Th(),
				"thead" => new Thead(),
				"time" => new Time(),
				"title" => new Title(),
				"tr" => new Tr(),
				"track" => new Track(),
				"u" => new U(),
				"ul" => new Ul(),
				"var" => new Var(),
				"video" => new Video(),
				"wbr" => new Wbr(),
				_ => throw new ArgumentException($"element type: {tagName} unknown")
		};
	}
}


